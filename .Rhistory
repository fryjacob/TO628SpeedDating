install.packages("knitr")
data()
2+3
3^2
4/2
log(10)
x=c(3, 1, 4, 2, 1, 4, 5, 1,4)
mean(x)
table(x)
data("InsectSprays")
dim(InsectSprays)
table(InsectSprays[,"spray"])
pie(table(InsectSprays[,"spray"]))
summary(InsectSprays[,"count"])
hist(InsectSprays[,"count"]), xlab="Insect Counts", main="")
hist(InsectSprays[,"count"], xlab="Insect Counts", main="")
source('D:/Documents/KNOWLEDGE/COMP SCIENCE/R/ColumbiaX-Statistical-Thinking-for-Data-Science_LearningActivity-2.Rmd at master · tz33cu_ColumbiaX-Statistical-Thinking-for-Data-Science · GitHub.html', encoding = 'UTF-8')
plot(count~spray, data=InsectSprays,)
plot(count~spray, data=InsectSprays,xlab="Types of Insecticide", ylab="Counts of Insects")
annova(lm(count~spray, data=Insectsprays))
anova(lm(count~spray, data=InsectSprays))
help("state.x77")
colnames(statedata)=c("popu", "inc", "illit", "life.exp", "murder", "hs.grad", "frost", "area")
colnames(state.x77)=c("popu", "inc", "illit", "life.exp", "murder", "hs.grad", "frost", "area")
plot(count~popu, data=state.77x, xlab="State", ylab="Population")
plot(count~popu, data=state.x77, xlab="State", ylab="Population")
plot(life.exp~inc, data=state.x77)
plot(life.exp~inc, data=statedata)
cor(state.x77[,"life.exp"], state.x77[,"inc"])
plot(life.exp~inc, data=state.x77, type="n")
text(life.exp~inc, data=state.x77, state.abb)
model1=lm(life.exp~inc, data=state.x77)
model1=lm(life.exp~inc, data=statedata)
model1
help("state.x77")
model1=lm(life.exp~inc, data=state)
model1=lm(life.exp~inc, data=state.abb)
model1=lm(life.exp~inc, data=state.x77)
model1=lm(life.exp~inc, data=state.area)
plot(life.exp~inc, data=state.x77, xlab="Income", ylab="Life Expectancy")
abline(model1)
10 + 20
10 - 20
citation ()package =
citation ()
5^4
sales <- 350
sales
sales = 350
sales
library("graphics", lib.loc="C:/Program Files/R/R-3.3.1/library")
library("grid", lib.loc="C:/Program Files/R/R-3.3.1/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.3.1/library")
ro
detach("package:grid", unload=TRUE)
detach("package:lattice", unload=TRUE)
detach("package:graphics", unload=TRUE)
setwd("D:/Documents/Knowledge/Data Analytics/TO 628 Big Data Analytics/GitHub/TO628SpeedDating")
jon <- read.csv("Speed Dating Data.csv")
View(jon)
summary(jon$pid)
View(jon)
summary(jon$pid)
summary(jon$iid)
table(field_cd)
table(jon$field_cd)
table(jon$field)
sort(table(jon$field))
468+521+110+77
sort(table(jon$field_cd))
sort(table(jon$career_c))
str(jon$career_c)
data.frame(table(jon$race, jon$match))
85/(85+335)
788/(3989+788)
123/(541+123)
267/(267+1715)
103/(103+419)
data.frame(table(jon$field_cd, jon$match))
data.frame(table(jon$field_cd, jon$match)[,])
sum(is.na(jon$go_out))
speed <- read.csv("Speed Dating Data.csv")
speed$gender <- as.factor(speed$gender)
speed$match <- as.factor(speed$match)
speed$field_cd <- as.factor(speed$field_cd)
levels(speed$field_cd) <- c("Law","Math","SocScie/Psych", "MedSci", "Engineering", "English", "History", "Business", "Education", "Bio","SocialWork","Undergrad", "PoliSci", "Film","FineArts","Lang","Architecture","Other")
speed$race <- as.factor(speed$race)
speed$date <- as.factor(speed$date)
levels(speed$date) <- c("SVRL/Week","2/Week","1/Week","2/Month", "1/Month", "SVRL/Year", "AlmostNever")
speed$go_out <- as.factor(speed$go_out)
levels(speed$go_out) <- c("SVRL/Week","2/Week","1/Week","2/Month", "1/Month", "SVRL/Year", "AlmostNever")
speed$career_c <-as.factor(speed$career_c)
levels(speed$career_c) <- c("Lawyer","Academic/Research","Psychologist","DocMed", "Engineer", "Entertainment", "Banking/Consulting", "RealEstate","IntlAffairs","Undecided","SocialWork","SpeechPath","Politics", "ProSports", "Other", "Journalism", "Architecture")
speed$race_o <-as.factor(speed$race_o)
speed$samerace <- as.factor(speed$samerace)
sd2 <- speed[ , c(
"iid",
"gender",
"pid",
"match",
"int_corr",
"samerace",
"age_o",
"race_o",
"dec_o",
"age",
"field_cd",
"race",
"imprace",
"imprelig",
"date",
"go_out",
"sports",
"tvsports",
"exercise",
"dining",
"museums",
"art",
"hiking",
"gaming",
"clubbing",
"reading",
"tv",
"theater",
"movies",
"concerts",
"music",
"shopping",
"yoga",
"attr1_1",
"sinc1_1",
"intel1_1",
"fun1_1",
"amb1_1",
"shar1_1",
"attr2_1",
"sinc2_1",
"intel2_1",
"fun2_1",
"amb2_1",
"shar2_1",
"wave")]
waveNum <- which(colnames(sd2)=="wave")
sd2 <- subset(sd2, sd2[ , waveNum] > 9 | sd2[ , waveNum] < 6)
sd2 <- sd2[, -45]
sdclean2 <- na.omit(sd2) #Remove rows with NA values to create a "clean" set
sdclean2 <- within(sdclean2, datenbr <- c(NA, head(sdclean2$iid, -1)))
View(sdclean2)
sdclean2 <- within(sdclean2, iidbef <- c(NA, head(sdclean2$iid, -1)))
sdclean2 <- within(sdclean2, iidbef <- c(NA, head(sdclean2$iid, -1)))
sdclean2 <- within(sdclean2, iidaft <- c(NA, head(sdclean2$iid, +1)))
sdclean2 <- within(sdclean2, iidaft <- c(NA, head(sdclean2$iid, +1)))
View(sdclean2)
sdclean2 <- within(sdclean2, iidbef <- c(NA, head(sdclean2$iid, -1)))
sdclean2$datenbr <- ifelse(sdclean2$iid != sdclean2$iidbef)
sdclean2 <- within(sdclean2, iidbef <- c(NA, head(sdclean2$iid, -1)))
sdclean2$datenbr <- ifelse(sdclean2$iid != sdclean2$iidbef,1,0)
speed <- read.csv("Speed Dating Data.csv")
speed$gender <- as.factor(speed$gender)
speed$match <- as.factor(speed$match)
speed$field_cd <- as.factor(speed$field_cd)
levels(speed$field_cd) <- c("Law","Math","SocScie/Psych", "MedSci", "Engineering", "English", "History", "Business", "Education", "Bio","SocialWork","Undergrad", "PoliSci", "Film","FineArts","Lang","Architecture","Other")
speed$race <- as.factor(speed$race)
speed$date <- as.factor(speed$date)
levels(speed$date) <- c("SVRL/Week","2/Week","1/Week","2/Month", "1/Month", "SVRL/Year", "AlmostNever")
speed$go_out <- as.factor(speed$go_out)
levels(speed$go_out) <- c("SVRL/Week","2/Week","1/Week","2/Month", "1/Month", "SVRL/Year", "AlmostNever")
speed$career_c <-as.factor(speed$career_c)
levels(speed$career_c) <- c("Lawyer","Academic/Research","Psychologist","DocMed", "Engineer", "Entertainment", "Banking/Consulting", "RealEstate","IntlAffairs","Undecided","SocialWork","SpeechPath","Politics", "ProSports", "Other", "Journalism", "Architecture")
speed$race_o <-as.factor(speed$race_o)
speed$samerace <- as.factor(speed$samerace)
sd2 <- speed[ , c(
"iid",
"gender",
"pid",
"match",
"dec",
"int_corr",
"samerace",
"age_o",
"race_o",
"dec_o",
"age",
"field_cd",
"race",
"imprace",
"imprelig",
"date",
"go_out",
"sports",
"tvsports",
"exercise",
"dining",
"museums",
"art",
"hiking",
"gaming",
"clubbing",
"reading",
"tv",
"theater",
"movies",
"concerts",
"music",
"shopping",
"yoga",
"attr1_1",
"sinc1_1",
"intel1_1",
"fun1_1",
"amb1_1",
"shar1_1",
"attr2_1",
"sinc2_1",
"intel2_1",
"fun2_1",
"amb2_1",
"shar2_1",
"wave",
"attr",
"sinc",
"intel",
"fun",
"amb",
"shar")]
waveNum <- which(colnames(sd2)=="wave")
sd2 <- subset(sd2, sd2[ , waveNum] > 9 | sd2[ , waveNum] < 6)
#sd2 <- sd2[, -45]
sdrandom <- sd2[sample(nrow(sd2), nrow(sd2)),] #Get a random sample since the data is organized by participant
sdclean <- na.omit(sdrandom) #Remove rows with NA values to create a "clean" set
interestTable <- unique(data.frame(sdclean$iid))
interestTable$iid <- interestTable$sdclean.iid
interestTable$sdclean.iid <- NULL
for (x in interestTable$iid) {
interestTable$go_out[interestTable$iid == x] <- sdclean$go_out[x == sdclean$iid]
interestTable$age[interestTable$iid == x] <- sdclean$age[x == sdclean$iid]
interestTable$field_cd[interestTable$iid == x] <- sdclean$field_cd[x == sdclean$iid]
interestTable$date[interestTable$iid == x] <- sdclean$date[x == sdclean$iid]
interestTable$sports[interestTable$iid == x] <- sdclean$sports[x == sdclean$iid]
interestTable$tvsports[interestTable$iid == x] <- sdclean$tvsports[x == sdclean$iid]
interestTable$exercise[interestTable$iid == x] <- sdclean$exercise[x == sdclean$iid]
interestTable$dining[interestTable$iid == x] <- sdclean$dining[x == sdclean$iid]
interestTable$museums[interestTable$iid == x] <- sdclean$museums[x == sdclean$iid]
interestTable$art[interestTable$iid == x] <- sdclean$art[x == sdclean$iid]
interestTable$hiking[interestTable$iid == x] <- sdclean$hiking[x == sdclean$iid]
interestTable$gaming[interestTable$iid == x] <- sdclean$gaming[x == sdclean$iid]
interestTable$clubbing[interestTable$iid == x] <- sdclean$clubbing[x == sdclean$iid]
interestTable$reading[interestTable$iid == x] <- sdclean$reading[x == sdclean$iid]
interestTable$tv[interestTable$iid == x] <- sdclean$tv[x == sdclean$iid]
interestTable$theater[interestTable$iid == x] <- sdclean$theater[x == sdclean$iid]
interestTable$movies[interestTable$iid == x] <- sdclean$movies[x == sdclean$iid]
interestTable$concerts[interestTable$iid == x] <- sdclean$concerts[x == sdclean$iid]
interestTable$music[interestTable$iid == x] <- sdclean$music[x == sdclean$iid]
interestTable$shopping[interestTable$iid == x] <- sdclean$shopping[x == sdclean$iid]
interestTable$yoga[interestTable$iid == x] <- sdclean$yoga[x == sdclean$iid]
}
#Add column to check if total of attributions add up to 100
sdclean$total1 <- rowSums(sdclean[,c("attr1_1", "sinc1_1", "intel1_1", "fun1_1", "amb1_1", "shar1_1")])
sdclean$attr1_1 <- round(sdclean$attr1_1/sdclean$total1*100, digits = 2)
sdclean$sinc1_1 <- round(sdclean$sinc1_1/sdclean$total1*100, digits = 2)
sdclean$intel1_1 <- round(sdclean$intel1_1/sdclean$total1*100, digits = 2)
sdclean$fun1_1 <- round(sdclean$fun1_1/sdclean$total1*100, digits = 2)
sdclean$amb1_1 <- round(sdclean$amb1_1/sdclean$total1*100, digits = 2)
sdclean$shar1_1 <- round(sdclean$shar1_1/sdclean$total1*100, digits = 2)
sdclean$total1 <- round(rowSums(sdclean[,c("attr1_1", "sinc1_1", "intel1_1", "fun1_1", "amb1_1", "shar1_1")]),0)
sdclean2 <- na.omit(sd2)
sdclean2 <- within(sdclean2, iidbef <- c(NA, head(sdclean2$iid, -1)))
sdclean2$firstdate <- ifelse(sdclean2$iid != sdclean2$iidbef,1,0)
sdclean2[1,55] <- 1
sdclean2$iidaft <- c(sdclean2$iid[-1], NA)
sdclean2$enddate <- ifelse(sdclean2$iid != sdclean2$iidaft,1,0)
sdclean2[5504,57] <- 1
firstdate <- sdclean2[which(sdclean2$firstdate==1),]
enddate <- sdclean2 [which(sdclean2$enddate==1),]
firstyes <- nrow(firstdate[which(firstdate$dec==1),])/nrow(firstdate)
endyes <- nrow(enddate[which(enddate$dec==1),])/nrow(enddate)
# Barplot
timeyes <- data.frame(time = c("First Date", "Last Date"), yesratio=c(firstyes, endyes))
ggplot(timeyes, aes(time, yesratio, fill=time)) + geom_bar(stat="identity") + xlab("") + ylab("Ratio of Positive Decision") + labs(title="Impact of number of dates on decision") + guides(fill=FALSE) + scale_fill_manual(values=c("#CC6666", "#9999CC"))
View(sdclean2)
