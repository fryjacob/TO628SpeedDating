summarise(Attractive = mean(attr1_1), Sincere = mean(sinc1_1), Intelligent = mean(intel1_1), Fun = mean(fun1_1), Ambitious = mean(amb1_1), Interest = mean(shar1_1))
statedplot <-
test1 %>%
select(-gender)
maxmin <- data.frame(
Attractive = c(36, 0),
Sincere = c(36, 0),
Intelligent = c(36, 0),
Fun = c(36, 0),
Ambitious = c(36, 0),
Interest = c(36, 0))
test11 <- rbind(maxmin, statedplot)
test11male <- test11[c(1,2,4),]
test11female <- test11[c(1,2,3),]
radarchart(test11,
pty = 32,
axistype = 0,
pcol = c(adjustcolor("#ff99cc", 0.5), adjustcolor("#4da6ff", 0.5)),
pfcol = c(adjustcolor("#ff99cc", 0.5), adjustcolor("#4da6ff", 0.5)),
plty = 1,
plwd = 3,
cglty = 1,
cglcol = "gray88",
centerzero = TRUE,
seg = 5,
vlcex = 0.75,
palcex = 0.75,
title="What people say they look for in the opposite sex")
legend("topleft",
c("Male", "Female"),
fill = c(adjustcolor("#4da6ff", 0.5), adjustcolor("#ff99cc", 0.5)))
# Group by pid: mean for that person, and sex opposite - the sex who
test2 <-
sdclean %>%
group_by(pid, gender) %>%
summarise(Decision = mean(dec), Attractive = mean(attr), Sincere = mean(sinc), Intelligent = mean(intel), Fun = mean(fun), Ambitious = mean(amb), Interest = mean(shar))
test2a <- test2
test2 %>%
select(pid, gender, Decision, Attractive)
test2b <-
test2 %>%
select(pid, gender, Decision, Sincere)
test2c <-
test2 %>%
select(pid, gender, Decision, Intelligent)
test2d <-
test2 %>%
select(pid, gender, Decision, Fun)
test2e <-
test2 %>%
select(pid, gender, Decision, Ambitious)
test2f <-
test2 %>%
select(pid, gender, Decision, Interest)
coratr <- cor(test2a$Decision, test2a$Attractive)
corsin <- cor(test2b$Decision, test2b$Sincere)
corint <- cor(test2c$Decision, test2c$Intelligent)
corfun <- cor(test2d$Decision, test2d$Fun)
coramb <- cor(test2e$Decision, test2e$Ambitious)
corshar <- cor(test2f$Decision, test2f$Interest)
test2am <-
test2 %>%
select(pid, gender, Decision, Attractive) %>%
filter(!Attractive == "NA") %>%
filter(gender == "1")
test2af <-
test2 %>%
select(pid, gender, Decision, Attractive) %>%
filter(!Attractive == "NA") %>%
filter(gender == "0")
cormatr <- cor(test2am$Decision, test2am$Attractive)
corfatr <- cor(test2af$Decision, test2af$Attractive)
test2bm <-
test2 %>%
select(pid, gender, Decision, Sincere) %>%
filter(gender == "1")
test2bf <-
test2 %>%
select(pid, gender, Decision, Sincere) %>%
filter(!Sincere == "NA") %>%
filter(gender == "0")
cormsin <- cor(test2bm$Decision, test2bm$Sincere)
corfsin <- cor(test2bf$Decision, test2bf$Sincere)
test2cm <-
test2 %>%
select(pid, gender, Decision, Intelligent) %>%
filter(!Intelligent == "NA") %>%
filter(gender == "1")
test2cf <-
test2 %>%
select(pid, gender, Decision, Intelligent) %>%
filter(!Intelligent == "NA") %>%
filter(gender == "0")
cormint <- cor(test2cm$Decision, test2cm$Intelligent)
corfint <- cor(test2cf$Decision, test2cf$Intelligent)
test2dm <-
test2 %>%
select(pid, gender, Decision, Fun) %>%
filter(!Fun == "NA") %>%
filter(gender == "1")
test2df <-
test2 %>%
select(pid, gender, Decision, Fun) %>%
filter(!Fun == "NA") %>%
filter(gender == "0")
cormfun <- cor(test2dm$Decision, test2dm$Fun)
corffun <- cor(test2df$Decision, test2df$Fun)
test2em <-
test2 %>%
select(pid, gender, Decision, Ambitious) %>%
filter(!Ambitious == "NA") %>%
filter(gender == "1")
test2ef <-
test2 %>%
select(pid, gender, Decision, Ambitious) %>%
filter(!Ambitious == "NA") %>%
filter(gender == "0")
cormamb <- cor(test2em$Decision, test2em$Ambitious)
corfamb <- cor(test2ef$Decision, test2ef$Ambitious)
test2fm <-
test2 %>%
select(pid, gender, Decision, Interest) %>%
filter(!Interest == "NA") %>%
filter(gender == "1")
test2ff <-
test2 %>%
select(pid, gender, Decision, Interest) %>%
filter(!Interest == "NA") %>%
filter(gender == "0")
cormshar <- cor(test2fm$Decision, test2fm$Interest)
corfshar <- cor(test2ff$Decision, test2ff$Interest)
# Ref JPHwang on Kaggle for radarchart code
fin <-data.frame(Traits = c("Average", "Male", "Female"),
corAttractive = c(coratr, cormatr, corfatr),
corSincere = c(corsin, cormsin, corfsin),
corIntelligence = c(corint, cormint, corfint),
corFun = c(corfun, cormfun, corffun),
corAmbitious = c(coramb, cormamb, corfamb),
corInterest = c(corshar, cormshar, corfshar))
fin$total <- rowSums(fin[,c("corAttractive", "corSincere", "corIntelligence", "corFun", "corAmbitious", "corInterest")])
fin$corAttractive <- round(fin$corAttractive/fin$total*100, digits = 2)
fin$corSincere <- round(fin$corSincere/fin$total*100, digits = 2)
fin$corIntelligence <- round(fin$corIntelligence/fin$total*100, digits = 2)
fin$corFun <- round(fin$corFun/fin$total*100, digits = 2)
fin$corAmbitious <- round(fin$corAmbitious/fin$total*100, digits = 2)
fin$corInterest <- round(fin$corInterest/fin$total*100, digits = 2)
fin <-
fin %>%
select(corAttractive, corSincere, corIntelligence, corFun, corAmbitious, corInterest)
colnames(fin) <- c("Attractive","Sincere", "Intelligent", "Fun", "Ambitious", "Interest")
testn <- rbind(maxmin, fin, statedplot)
testnmale <- testn[-c(3, 5, 6), ]
testnfemale <- testn[-c(3, 4, 7), ]
radarchart(testnmale,
pty = 32,
axistype = 0,
pcol = c(adjustcolor("#004080", 0.5), adjustcolor("#4da6ff", 0.5)),
pfcol = c(adjustcolor("#004080", 0.5), adjustcolor("#4da6ff", 0.5)),
plty = 1,
plwd = 3,
cglty = 1,
cglcol = "gray88",
centerzero = TRUE,
seg = 5,
vlcex = 0.75,
palcex = 0.75,
title = "Males' Stated Interest versus Actual Influence on Decision")
legend("topleft",
c("Stated Interest", "Actual Influence"),
fill = c(adjustcolor("#4da6ff", 0.5), adjustcolor("#004080", 0.5)))
radarchart(testnfemale,
pty = 32,
axistype = 0,
pcol = c(adjustcolor("#ff3377", 0.5), adjustcolor("#ff99cc", 0.5)),
pfcol = c(adjustcolor("#ff3377", 0.5), adjustcolor("#ff99cc", 0.5)),
plty = 1,
plwd = 3,
cglty = 1,
cglcol = "gray88",
centerzero = TRUE,
seg = 5,
vlcex = 0.75,
palcex = 0.75,
title = "Females' Stated Interest versus Actual Influence on Decision")
legend("topleft",
c("Stated Interest", "Actual Influence"),
fill = c(adjustcolor("#ff99cc", 0.5), adjustcolor("#ff3377", 0.5)))
test3 <-
sdclean %>%
group_by(gender) %>%
summarise(Attractive = mean(attr2_1), Sincere = mean(sinc2_1), Intelligent = mean(intel2_1), Fun = mean(fun2_1), Ambitious = mean(amb2_1), Interest = mean(shar2_1))
test3plot <-
test3 %>%
select(-gender)
test4 <- rbind(maxmin, test3plot, fin)
test4male <- test4[c(1,2,3,6),]
test4female <- test4[c(1,2,4,7),]
radarchart(test4male,
pty = 32,
axistype = 0,
pcol = c(adjustcolor("#4da6ff", 0.5), adjustcolor("#004080", 0.5)),
pfcol = c(adjustcolor("#4da6ff", 0.5), adjustcolor("#004080", 0.5)),
plty = 1,
plwd = 3,
cglty = 1,
cglcol = "gray88",
centerzero = TRUE,
seg = 5,
vlcex = 0.75,
palcex = 0.75,
title="What women think men look for versus what men actually do")
legend("topleft",
c("Women Estimated Influence", "Actual Influence"),
fill = c(adjustcolor("#4da6ff", 0.5), adjustcolor("#004080", 0.5)))
suppressWarnings(library(randomForest))
suppressWarnings(library(class))
suppressWarnings(library(lmtest))
suppressWarnings(library(kernlab))
suppressWarnings(library(dplyr))
suppressWarnings(library(gmodels))
speed <- read.csv("Speed Dating Data.csv")
speed$gender <- as.factor(speed$gender)
speed$match <- as.factor(speed$match)
speed$field_cd <- as.factor(speed$field_cd)
levels(speed$field_cd) <- c("Law","Math","SocScie/Psych", "MedSci", "Engineering", "English", "History", "Business", "Education", "Bio","SocialWork","Undergrad", "PoliSci", "Film","FineArts","Lang","Architecture","Other")
speed$race <- as.factor(speed$race)
speed$date <- as.factor(speed$date)
levels(speed$date) <- c("SVRL/Week","2/Week","1/Week","2/Month", "1/Month", "SVRL/Year", "AlmostNever")
speed$go_out <- as.factor(speed$go_out)
levels(speed$go_out) <- c("SVRL/Week","2/Week","1/Week","2/Month", "1/Month", "SVRL/Year", "AlmostNever")
speed$group <- ifelse(speed$career_c == 2, 1, ifelse(speed$career_c == 7, 2, 3))
speed$group <- as.factor(speed$group)
levels(speed$group) <- c("Academic/Research", "Business", "Other")
speed$career_c <-as.factor(speed$career_c)
levels(speed$career_c) <- c("Lawyer","Academic/Research","Psychologist","DocMed", "Engineer", "Entertainment", "Banking/Consulting", "RealEstate","IntlAffairs","Undecided","SocialWork","SpeechPath","Politics", "ProSports", "Other", "Journalism", "Architecture")
speed$race_o <-as.factor(speed$race_o)
speed$samerace <- as.factor(speed$samerace)
sd2 <- speed[ , c(
"iid",
"gender",
"pid",
"match",
"int_corr",
"samerace",
"age_o",
"race_o",
"dec_o",
"age",
"field_cd",
"race",
"imprace",
"imprelig",
"date",
"go_out",
"sports",
"tvsports",
"exercise",
"dining",
"museums",
"art",
"hiking",
"gaming",
"clubbing",
"reading",
"tv",
"theater",
"movies",
"concerts",
"music",
"shopping",
"yoga",
"attr1_1",
"sinc1_1",
"intel1_1",
"fun1_1",
"amb1_1",
"shar1_1",
"attr2_1",
"sinc2_1",
"intel2_1",
"fun2_1",
"amb2_1",
"shar2_1",
"wave")]
waveNum <- which(colnames(sd2)=="wave")
sd2 <- subset(sd2, sd2[ , waveNum] > 9 | sd2[ , waveNum] < 6)
#fill in blanks for "other" in order to keep all participants
#intsead of NA omit
sd2$field_cd <- ifelse(is.na(sd2$field_cd), "Other", sd2$field_cd)
sd2$attr1_1 <- ifelse(is.na(sd2$attr1_1), 0, sd2$attr1_1)
sd2$sinc1_1 <- ifelse(is.na(sd2$sinc1_1), 0, sd2$sinc1_1)
sd2$intel1_1 <- ifelse(is.na(sd2$intel1_1), 0, sd2$intel1_1)
sd2$fun1_1 <- ifelse(is.na(sd2$fun1_1), 0, sd2$fun1_1)
sd2$amb1_1 <- ifelse(is.na(sd2$amb1_1), 0, sd2$amb1_1)
sd2$shar1_1 <- ifelse(is.na(sd2$shar1_1), 0, sd2$shar1_1)
sd2$attr2_1 <- ifelse(is.na(sd2$attr2_1), 0, sd2$attr2_1)
sd2$sinc2_1 <- ifelse(is.na(sd2$sinc2_1), 0, sd2$sinc2_1)
sd2$intel2_1 <- ifelse(is.na(sd2$intel2_1), 0, sd2$intel2_1)
sd2$fun2_1 <- ifelse(is.na(sd2$fun2_1), 0, sd2$fun2_1)
sd2$amb2_1 <- ifelse(is.na(sd2$amb2_1), 0, sd2$amb2_1)
sd2$shar2_1 <- ifelse(is.na(sd2$shar2_1), 0, sd2$shar2_1)
sd2 <- sd2[!is.na(sd2$pid), ] #get rid of the blank places where 118 was supposed to date
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
'%!in%' <- function(x,y)!('%in%'(x,y))
sd2 <- sd2[, -46]
problemIDs <- sd2$iid[which(is.na(sd2$age))]
problemIDs <- c(problemIDs, sd2$iid[which(is.na(sd2$sports))])
problemIDs <- c(problemIDs, sd2$iid[which(is.na(sd2$date))])
problemIDs <- unique(problemIDs)
sd3 <- sd2[sd2$iid %!in% problemIDs, ]
sd3 <- sd3[sd3$pid %!in% problemIDs, ]
problemIDs <- c(problemIDs, 118)
problemIDs <- c(problemIDs, seq(132, 233, 1))
problemIDs <- sort(problemIDs)
for (value in problemIDs) {
sd3$iid <- ifelse(sd3$iid > value, sd3$iid - 1, sd3$iid)
sd3$pid <- ifelse(sd3$pid > value, sd3$pid - 1, sd3$pid)
}
sdReduced <- sd3 #create a dataset so can be used for  indexing appropriately
interestTable <- unique(data.frame(sdReduced$iid))
interestTable$iid <- interestTable$sdReduced.iid
interestTable$sdReduced.iid <- NULL
for (x in interestTable$iid) {
interestTable$go_out[interestTable$iid == x] <- sdReduced$go_out[x == sdReduced$iid]
interestTable$age[interestTable$iid == x] <- sdReduced$age[x == sdReduced$iid]
interestTable$field_cd[interestTable$iid == x] <- sdReduced$field_cd[x == sdReduced$iid]
interestTable$date[interestTable$iid == x] <- sdReduced$date[x == sdReduced$iid]
interestTable$sports[interestTable$iid == x] <- sdReduced$sports[x == sdReduced$iid]
interestTable$tvsports[interestTable$iid == x] <- sdReduced$tvsports[x == sdReduced$iid]
interestTable$exercise[interestTable$iid == x] <- sdReduced$exercise[x == sdReduced$iid]
interestTable$dining[interestTable$iid == x] <- sdReduced$dining[x == sdReduced$iid]
interestTable$museums[interestTable$iid == x] <- sdReduced$museums[x == sdReduced$iid]
interestTable$art[interestTable$iid == x] <- sdReduced$art[x == sdReduced$iid]
interestTable$hiking[interestTable$iid == x] <- sdReduced$hiking[x == sdReduced$iid]
interestTable$gaming[interestTable$iid == x] <- sdReduced$gaming[x == sdReduced$iid]
interestTable$clubbing[interestTable$iid == x] <- sdReduced$clubbing[x == sdReduced$iid]
interestTable$reading[interestTable$iid == x] <- sdReduced$reading[x == sdReduced$iid]
interestTable$tv[interestTable$iid == x] <- sdReduced$tv[x == sdReduced$iid]
interestTable$theater[interestTable$iid == x] <- sdReduced$theater[x == sdReduced$iid]
interestTable$movies[interestTable$iid == x] <- sdReduced$movies[x == sdReduced$iid]
interestTable$concerts[interestTable$iid == x] <- sdReduced$concerts[x == sdReduced$iid]
interestTable$music[interestTable$iid == x] <- sdReduced$music[x == sdReduced$iid]
interestTable$shopping[interestTable$iid == x] <- sdReduced$shopping[x == sdReduced$iid]
interestTable$yoga[interestTable$iid == x] <- sdReduced$yoga[x == sdReduced$iid]
}
for (y in sdReduced$pid){
sdReduced$pGoOut[y == sdReduced$pid] <- interestTable$go_out[interestTable$iid == y]
sdReduced$pAge[y == sdReduced$pid] <- interestTable$age[interestTable$iid == y]
sdReduced$pField_cd[y == sdReduced$pid] <- interestTable$field_cd[interestTable$iid == y]
sdReduced$pDate[y == sdReduced$pid] <- interestTable$date[interestTable$iid == y]
sdReduced$pSports[y == sdReduced$pid] <- interestTable$sports[interestTable$iid == y]
sdReduced$pSportsTV[y == sdReduced$pid] <- interestTable$tvsports[interestTable$iid == y]
sdReduced$pExercise[y == sdReduced$pid] <- interestTable$exercise[interestTable$iid == y]
sdReduced$pDining[y == sdReduced$pid] <- interestTable$dining[interestTable$iid == y]
sdReduced$pMuseums[y == sdReduced$pid] <- interestTable$museums[interestTable$iid == y]
sdReduced$pArt[y == sdReduced$pid] <- interestTable$art[interestTable$iid == y]
sdReduced$pHiking[y == sdReduced$pid] <- interestTable$hiking[interestTable$iid == y]
sdReduced$pGaming[y == sdReduced$pid] <- interestTable$gaming[interestTable$iid == y]
sdReduced$pClubbing[y == sdReduced$pid] <- interestTable$clubbing[interestTable$iid == y]
sdReduced$pReading[y == sdReduced$pid] <- interestTable$reading[interestTable$iid == y]
sdReduced$pTV[y == sdReduced$pid] <- interestTable$tv[interestTable$iid == y]
sdReduced$pTheater[y == sdReduced$pid] <- interestTable$theater[interestTable$iid == y]
sdReduced$pMovies[y == sdReduced$pid] <- interestTable$movies[interestTable$iid == y]
sdReduced$pConcerts[y == sdReduced$pid] <- interestTable$concerts[interestTable$iid == y]
sdReduced$pMusic[y == sdReduced$pid] <- interestTable$music[interestTable$iid == y]
sdReduced$pShopping[y == sdReduced$pid] <- interestTable$shopping[interestTable$iid == y]
sdReduced$pYoga[y == sdReduced$pid] <- interestTable$yoga[interestTable$iid == y]
}
sdReduced$pDate <- as.factor(sdReduced$pDate)
levels(sdReduced$pDate) <- c("SVRL/Week","2/Week","1/Week","2/Month", "1/Month", "SVRL/Year", "AlmostNever")
sdReduced$pGoOut <- as.factor(sdReduced$pGoOut)
levels(sdReduced$pGoOut) <- c("SVRL/Week","2/Week","1/Week","2/Month", "1/Month", "SVRL/Year", "AlmostNever")
#not doing one for Field_CD delta
sdReduced$pDeltaGoOut <- as.numeric(sdReduced$go_out) - as.numeric(sdReduced$pGoOut)
sdReduced$pDeltaDate <- as.numeric(sdReduced$date) - as.numeric(sdReduced$pDate)
sdReduced$pDeltaAge <- sdReduced$age - sdReduced$pAge
sdReduced$pDeltaSports <- sdReduced$sports - sdReduced$pSports
sdReduced$pDeltaTVSports <- sdReduced$tvsports - sdReduced$pSportsTV
sdReduced$pDeltaExercise <- sdReduced$exercise - sdReduced$pExercise
sdReduced$pDeltaDining <- sdReduced$dining - sdReduced$pDining
sdReduced$pDeltaMuseums <- sdReduced$museums - sdReduced$pMuseums
sdReduced$pDeltaArt <- sdReduced$art - sdReduced$pArt
sdReduced$pDeltaHiking <- sdReduced$hiking - sdReduced$pHiking
sdReduced$pDeltaGaming <- sdReduced$gaming - sdReduced$pGaming
sdReduced$pDeltaClubbing <- sdReduced$clubbing - sdReduced$pClubbing
sdReduced$pDeltaReading <- sdReduced$reading - sdReduced$pReading
sdReduced$pDeltaTV <- sdReduced$tv - sdReduced$pTV
sdReduced$pDeltaTheater <- sdReduced$theater - sdReduced$pTheater
sdReduced$pDeltaConcerts <- sdReduced$concerts - sdReduced$pConcerts
sdReduced$pDeltaMusic <- sdReduced$music - sdReduced$pMusic
sdReduced$pDeltaMovies <- sdReduced$movies - sdReduced$pMovies
sdReduced$pDeltaYoga <- sdReduced$yoga - sdReduced$pYoga
sdReduced$pDeltaShopping <- sdReduced$shopping - sdReduced$pShopping
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
set.seed(300)
sdForest <- sdReduced
startColumn <- which(colnames(sdForest) == "pGoOut")
stopColumn <- (which(colnames(sdForest) == "pYoga"))
sdForest <- sdForest[, -(startColumn:stopColumn)]
startColumn <- which(colnames(sdForest) == "date")
stopColumn <- which(colnames(sdForest) == "yoga")
sdForest <- sdForest[, -(startColumn:stopColumn)]
sdForest <- sdForest[, -1] #remove iid
sdForest <- sdForest[, -2] #remove pid
rfDummies <- as.data.frame(model.matrix(~ . -1, sdForest))
matchColumn <- which(colnames(rfDummies) == "match1")
matchPlaceholder <- rfDummies$match1
rfDummies <- rfDummies[, -matchColumn]
#normalize data so that everything is weighted equally
dataNormal <- as.data.frame(lapply(rfDummies, normalize))
dataNormal$match1 <- matchPlaceholder
rfMatchFactor <- dataNormal
# rfMatchFactor <- rfMatchFactor[, -1] #remove genders
# rfMatchFactor <- rfMatchFactor[, -1]
# startColumn <- which(colnames(rfMatchFactor) == "age")
# rfMatchFactor <- rfMatchFactor[, -startColumn]
# startColumn <- which(colnames(rfMatchFactor) == "age_o")
# rfMatchFactor <- rfMatchFactor[, -startColumn]
startColumn <- which(colnames(rfMatchFactor) == "dec_o")
rfMatchFactor <- rfMatchFactor[, -startColumn]
rfMatchFactor$match1 <- as.factor(rfMatchFactor$match1)
randomizedData <- rfMatchFactor[sample(nrow(rfMatchFactor)),]
trainRows <- round(nrow(randomizedData) * .8)
trainData <- randomizedData[1:trainRows, ]
testData <- randomizedData[(trainRows+1):nrow(randomizedData), ]
logisticModel <- glm(match1 ~ ., data = trainData, family = "binomial")
summary(logisticModel)
logPrediction <- ifelse(predict(logisticModel, newdata=testData, type = "response") > .5, 1, 0)
CrossTable(x = testData$match1, y = logPrediction, prop.chisq=FALSE)
logisticModel2 <- glm(match1 ~ imprace + int_corr + samerace1 + field_cd11 + field_cd4 + intel2_1, data = trainData, family = "binomial")
logPrediction2 <- ifelse(predict(logisticModel2, newdata=testData, type = "response") > .5, 1, 0)
CrossTable(x = testData$match1, y = logPrediction2, prop.chisq=FALSE)
prop.table(table(randomizedData$match1))
speed <- read.csv("Speed Dating Data.csv")
speed$gender <- as.factor(speed$gender)
#speed$match <- as.factor(speed$match)
speed$field_cd <- as.factor(speed$field_cd)
levels(speed$field_cd) <- c("Law","Math","SocScie/Psych", "MedSci", "Engineering", "English", "History", "Business", "Education", "Bio","SocialWork","Undergrad", "PoliSci", "Film","FineArts","Lang","Architecture","Other")
speed$race <- as.factor(speed$race)
speed$date <- as.factor(speed$date)
levels(speed$date) <- c("SVRL/Week","2/Week","1/Week","2/Month", "1/Month", "SVRL/Year", "AlmostNever")
speed$go_out <- as.factor(speed$go_out)
levels(speed$go_out) <- c("SVRL/Week","2/Week","1/Week","2/Month", "1/Month", "SVRL/Year", "AlmostNever")
speed$group <- ifelse(speed$career_c == 2, 1, ifelse(speed$career_c == 7, 2, 3))
speed$group <- as.factor(speed$group)
levels(speed$group) <- c("Academic/Research", "Banking/Consulting", "Other")
speed$career_c <-as.factor(speed$career_c)
levels(speed$career_c) <- c("Lawyer","Academic/Research","Psychologist","DocMed", "Engineer", "Entertainment", "Banking/Consulting", "RealEstate","IntlAffairs","Undecided","SocialWork","SpeechPath","Politics", "ProSports", "Other", "Journalism", "Architecture")
speed$race_o <-as.factor(speed$race_o)
speed$samerace <- as.factor(speed$samerace)
sd2 <- speed[ , c(
"iid",
"gender",
"pid",
"match",
"dec",
"int_corr",
"samerace",
"age_o",
"race_o",
"dec_o",
"age",
"field_cd",
"race",
"imprace",
"imprelig",
"date",
"go_out",
"sports",
"tvsports",
"exercise",
"dining",
"museums",
"art",
"hiking",
"gaming",
"clubbing",
"reading",
"tv",
"theater",
"movies",
"concerts",
"music",
"shopping",
"yoga",
"attr1_1",
"sinc1_1",
"intel1_1",
"fun1_1",
"amb1_1",
"shar1_1",
"attr2_1",
"sinc2_1",
"intel2_1",
"fun2_1",
"amb2_1",
"shar2_1",
"group",
"wave")]
waveNum <- which(colnames(sd2)=="wave")
sd2 <- subset(sd2, sd2[ , waveNum] > 9 | sd2[ , waveNum] < 6)
sd2 <- sd2[, -45] #Remove wave numbers
sdrandom <- sd2[sample(nrow(sd2), nrow(sd2)),] #Get a random sample since the data is organized by participant
sdclean <- na.omit(sdrandom) #Remove rows with NA values to create a "clean" set
sdclean$gender <- factor(x=sdclean$gender, levels = c(0,1), labels = c("Female","Male"))
sdclean$race <-factor(x=sdclean$race, levels = c(1,2,3,4,5,6), labels = c("Black/African American","European/Caucasian-American","Latino/Hispanic American","Asian/Pacific Islander/Asian-American","Native American","Other"))
sdclean$race_o <- factor(x=sdclean$race_o, levels =c(1,2,3,4,5,6), labels = c("Black/African American","European/Caucasian-American","Latino/Hispanic American","Asian/Pacific Islander/Asian-American","Native American","Other"))
